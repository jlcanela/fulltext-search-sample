@startuml architecture
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5

Person(admin, "Browser", $sprite="user")
System_Boundary(webserver, "Web Server") {
    Container(apache, "Apache Server", "php", $descr="Main web server")
    Container(logs, "Logs", "filesystem", $descr="All logs")
    Rel(apache, logs, "generates", "https")
    Rel(admin, apache, "browses", "https")
}

System_Boundary(monitoring, "Monitoring") {
    Container(runner, "Runner", "batch", $descr="Orchestrate the various tasks")
    Container(curl, "Transfer", "curl", $descr="Transfer data")
    Container(storage, "Storage", "filesystem", $descr="Contains all the data files")
    Container(es, "Index", "elasticsearch", $descr="Indices of all logs")
    Container(clean, "Batch Cleaning", "batch", $descr="Clean and resync all the logs")
    Container(indexer, "Batch Indexer", "batch", $descr="Index all log data")
    Container(api, "API", "graphql", $descr="APIâ€¯service")
    Rel(runner, curl, "trigger", "shell")
    Rel(runner, clean, "trigger", "spark-submit")
    Rel(runner, indexer, "trigger", "spark-submit")
    Rel(curl, logs, "read", "https")
    Rel(curl, storage, "write", "fs")
    Rel(clean, storage, "write", "fs")
    Rel(clean, storage, "read", "fs")
    Rel(indexer, storage, "read", "fs")
    Rel(indexer, es, "write", "http")
    Rel_U(api, es, "read", "http")
}

@enduml
